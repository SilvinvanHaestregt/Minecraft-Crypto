options:
    prefix: &r[Crypto]

on load:

    if file path "plugins/Skript/scripts/update.sk" exists:
        execute console command "sk disable update"
        delete file path "plugins/Skript/scripts/update.sk"

    if file path "plugins/crypto/config.yml" is missing:
        create file "plugins/crypto/config.yml"
    else:
        load yaml "plugins/crypto/config.yml" as "crypto-config" # Load the config file
        save yaml "crypto-config" # Save the config file

    if online status of url "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/version.yml" is true:
        if yaml value "DoNotChange.version" in "crypto-config" is not set:
            set {_version} to text from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/version.yml"
            set yaml value "DoNotChange.version" in "crypto-config" to "%{_version}%"
            set the comments of yaml node "DoNotChange" in "crypto-config" to "Do not change this! If you still do so it could break the plugin!" and "If the version isn't right it will be shown in the config."
            save yaml "crypto-config"
        else:
            set {_request} to text from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/version.yml"

            set {_characters::*} to {_request} split at "."
            set {_newVersion} to "%{_characters::1}%%{_characters::2}%%{_characters::3}%" parsed as integer

            set {_characters::*} to yaml value "DoNotChange.version" in "crypto-config" split at "."
            set {_currentVersion} to "%{_characters::1}%%{_characters::2}%%{_characters::3}%" parsed as integer

            if {_currentVersion} is less than {_newVersion}:                
                send "{@prefix} &4UPDATE: There is an update available!" to console
                send "{@prefix} &cVersion %{_request}% &cis now available!" to console
                send "{@prefix} &cYou can download it on by executing the command /crypto update" to console
            else if {_currentVersion} is greater than {_newVersion}:
                send "{@prefix} &4ERROR: Plugin version is incorrect!"
                send "{@prefix} &cDon't fix this bug yourself!" to console
                send "{@prefix} &cContact discordhashtag0000" to console
            else:
                send "&rCrypto plugin is up-to date!" to console
    else:
        send "{@prefix} &4ERROR: Version link is not available!" to console
        send "{@prefix} &cYou cannot fix this bug yourself!" to console
        send "{@prefix} &cContact discordhashtag0000" to console


    if yaml value "autoupdate" in "crypto-config" is not set:
        set yaml value "autoupdate" in "crypto-config" to false
    else:
        if yaml value "autoupdate" in "crypto-config" is not true or false:
            send "{@prefix} &4CONFIG ERROR:" to console
            send "{@prefix} &cLine 4" to console
            send "{@prefix} &cAutoupdate can only be true or false!" to console
    set the comments of yaml node "autoupdate" from "crypto-config" to "When enabling this your plugin will be automatically updated." and "You can set this to (true) and (false)." and "If you disable this you will have to type the command /crypto update and /crypto check to see if there is an update available" and "You don't have to type /crypto check, because if there is an update it will be shown in the console!"

    if yaml value "updateconfirm" in "crypto-config" is not set:
        set yaml value "updateconfirm" in "crypto-config" to false
    else:
        if yaml value "updateconfirm" in "crypto-config" is not true or false:
            send "{@prefix} &4CONFIG ERROR:" to console
            send "{@prefix} &cLine 4" to console
            send "{@prefix} &cAutoupdate can only be true or false!" to console
    set the comments of yaml node "updateconfirm" from "crypto-config" to "When enabled a message gets send when the plugin tries to autoupdate." and "Note: this only works if autoupdate is enabled!" and "You can set this to true or false"

    save yaml "crypto-config"

command /updatetest:
    trigger:
        if file "plugins/Skript/scripts/update.sk" exists:
            execute console command "skript disable update"
            delete file path "plugins/Skript/scripts/update.sk"
            download file from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/update/update.sk" to file "plugins/Skript/scripts/update.sk"
            execute console command "sk reload update"
        else:
            download file from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/update/update.sk" to file "plugins/Skript/scripts/update.sk"
            execute console command "sk reload update"


every 6 hours: # This needs to be set to 6 hours
    if yaml value "autoupdate" in "crypto-config" is set:
        set {_request} to text from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/version.yml"

        set {_characters::*} to {_request} split at "."
        set {_newVersion} to "%{_characters::1}%%{_characters::2}%%{_characters::3}%" parsed as integer

        set {_characters::*} to yaml value "DoNotChange.version" in "crypto-config" split at "."
        set {_currentVersion} to "%{_characters::1}%%{_characters::2}%%{_characters::3}%" parsed as integer

        if {_currentVersion} is less than {_newVersion}:

            if yaml value "autoupdate" in "crypto-config" is true:
                if yaml value "updateconfirm" in "crypto-config" is true:
                    loop all players:
                        if player has permission "op":
                            send "{@prefix} &cDe plugin gaat automatisch updaten wil je dit? Typ /crypto update confirm" to loop-player
                            send "{@prefix} &cAls je niet wilt dat de plugin automatisch gaat updaten typ dan /crypto update deny" to loop-player
                            set {crypto.update.%loop-player%} to true
                    set {crypto.update} to true
                else if yaml value "updateconfirm" in "crypto-config" is false:
                    download file from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/update/update.sk" to file "plugins/Skript/scripts/crypto/update.sk"
                    reload script "update"

                    # Update de plugin
            else if yaml value "autoupdate" in "crypto-config" is false:
                

every 5 minutes:
    if {crypto.update} is true:
        loop all players:
            if loop player has permission "op":
                send "&cTyp /crypto update confirm om de plugin te updaten!" to loop-player
                send "&cOf typ /crypto update deny" to loop-player

command /crypto [<text>] [<text>]:
    trigger:
        if arg-1 is "update":
            if arg-2 is "confirm":
                loop all players:
                    if {crypto.update.%loop-player%} is true:
                        set {crypto.updatess.%loop-player%} to false
                        send "plugin gaat automatisch updaten!" to loop-player
                set {crypto.update} to false
            if arg-2 is "deny":
                loop all players:
                    if {crypto.update.%loop-player%} is true:
                        set {crypto.update.%loop-player%} to false
                        send "plugin gaat niet automatisch updaten!" to loop-player
                set {crypto.update} to false
            

            # Auto update gaat hier starten over 5 minuten
            # Config moet geunload worden en daarna opnieuw ingeladen worden
            # Mensen met op moeten een bericht krijgen en als confirm in de config aan staat dan moeten ze eerst /crypto update confirm moeten typen of in de chat confirm typen
        # Check for udpate
        # Autoupdate
    


    #if get text contains "version:" from "https://raw.githubusercontent.com/SilvinvanHaestregt/Minecraft-Crypto/main/version.yml" is not yaml 
    



    
    

    # set {_url} to "https://api.coinlore.net/api/ticker/?id=90"
    # send a request to "https://api.coinlore.net/api/ticker/?id=90" with the headers "Content-Type: application/json"

    # set {_response} to the last http response
    # set {_body} to {_response}'s body

    # send "%{_body}%" to console

    # create "config.json" from json "{""Example"": 30}" and store the error in {_error} # Don't forget to double the " !
    # if {_err} is set:
    #     send "An error occured while parsing JSON: %{_err}%" to console
    # file write "hallo" to file "config.json"